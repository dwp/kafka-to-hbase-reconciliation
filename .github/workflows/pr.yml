name: 'Pull Request'
on:
  pull_request:
    branches:
      - master

jobs:
  pull_request:

    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: make services
        run: make services

      - name: java setup
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: gradle build
        run: gradle clean build

      - name: gradle unit
        run: gradle unit

      - name: gradle integration
        run: gradle integration-test

  get-publish-version:
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.get-publish-version.outputs.publish-version }}
    steps:
      - name: Get publish version
        id: get-publish-version
        run: |
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "::set-output name=publish-version::${VERSION}"

  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: java setup
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: gradle build
        run: gradle clean build
      - name: Upload app
        uses: actions/upload-artifact@v2
        with:
          name: built-app
          path: build/


  build-and-publish-docker:
    runs-on: ubuntu-latest
    needs: [get-publish-version, build-app]
    steps:
      - uses: actions/checkout@master
      - name: Download built app
        uses: actions/download-artifact@v2
        with:
          name: built-app
      - name: show dir
        run: ls -la && ls -la build
#      - name: Get release version
#        id: get_version
#        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
#      - name: Publish to DockerHub
#        uses: elgohr/Publish-Docker-Github-Action@master
#        with:
#          name: ${{ env.IMAGE_NAME }}
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          tags: "latest, ${{ needs.get-publish-version.outputs.publish-version }}"
#          tag_semver: true
